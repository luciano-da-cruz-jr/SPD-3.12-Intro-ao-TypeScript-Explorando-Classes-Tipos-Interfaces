{"id":"index.ts","dependencies":[{"name":"D:\\Spreed Fullstack Developer - Básico - 98 Hrs\\Módulo 3 - Javascript\\12 - Introduçaõ ao TypeScript - Explorando Classes, Tipos e Interfaces\\1 - Como implementar o typescript na prática\\2\\dio-typescript\\package.json","includedInParent":true,"mtime":1655753564862}],"generated":{"js":"//Códigos 3.12.1.12\nvar brasileiro = {\n  idade: 19,\n  nome: 'Luiz'\n};\n/*Códigos 3.12.1.11\r\n\r\nimport $ from 'jquery';\r\n\r\n$.fn.extend\r\n(\r\n    {\r\n        novaFuncao()\r\n        {\r\n            console.log('Chamou nova funcao');\r\n        }\r\n    }\r\n);\r\n\r\n$('input').novaFuncao();\r\n\r\ninterface Estudante\r\n{\r\n    nome: string;\r\n    idade: number;\r\n}\r\n\r\ninterface Estudante\r\n{\r\n    serie: string;\r\n}\r\n\r\nconst estudante: Estudante =\r\n{\r\n\r\n}*/\n\n/*Códigos 3.12.1.10\r\n\r\ninterface Cachorro\r\n{\r\n    nome: string;\r\n    idade: number;\r\n    parqueFavorito?: string;\r\n}\r\n\r\ntype CachorroSomenteLeitura =\r\n{\r\n    +readonly [K in keyof Cachorro]-?: Cachorro[K];\r\n}\r\n\r\nclass MeuCachorro implements CachorroSomenteLeitura\r\n{\r\n    nome;\r\n    idade;\r\n    parqueFavorito;\r\n\r\n    constructor(nome, idade)\r\n    {\r\n        this.nome = nome;\r\n        this.idade = idade;\r\n    }\r\n}\r\n\r\nconst cao = new MeuCachorro('Apolo', 14); */\n\n/*Códigos 3.12.1.9\r\n\r\ninterface IUsuario\r\n{\r\n    id: string;\r\n    email: string;\r\n    cargo?: 'gerente' | 'coordenador' | 'supervisor' | 'funcionario';\r\n}\r\n\r\nfunction redirecione(usuario: IUsuario)\r\n{\r\n    if(usuario.cargo)\r\n    {\r\n        // redirecionar(usuario.cargo);\r\n    }\r\n\r\n    //redirecionar para area do usuário\r\n}*/\n\n/*Códgigos 3.12.1.8\r\n\r\ninterface IUsuario\r\n{\r\n    id: string;\r\n    email: string;\r\n}\r\n\r\ninterface IAdmin extends IUsuario\r\n{\r\n    cargo: 'gerente' | 'coordenador' | 'supervisor';\r\n}\r\n\r\nfunction redirecione(usuario: IUsuario | IAdmin)\r\n{\r\n    if('cargo' in usuario)\r\n    {\r\n         redirecionar para a área de administração\r\n    }\r\n\r\n     redirecionar para a área do usuário\r\n} */\n\n/*Códigos 3.12.1.7\r\n\r\nfunction adicionarApendiceALista<T>(array: T[], valor: T)\r\n{\r\n    return array.map(() => valor);\r\n}\r\n\r\nadicionarApendiceALista([1, 2, 3], 1); */\n\n/*Códigos 3.12.1.6\r\n\r\nconst input = document.getElementById('input') as HTMLInputElement;\r\n\r\ninput.addEventListener('input', (event) => {\r\n    const i = event.currentTarget as HTMLInputElement;\r\n    console.log(i.value);\r\n}); */\n\n/*Códigos 3.12.1.5\r\n\r\ninterface IAnimal\r\n{\r\n    nome: string;\r\n    tipo: 'terrestre' | 'aquatico';\r\n    domestico: boolean;\r\n}\r\n\r\ninterface IFelino extends IAnimal\r\n{\r\n    visaoNoturna: boolean;\r\n}\r\n\r\ninterface ICanino extends IAnimal\r\n{\r\n    porte: 'pequeno' | 'medio' | 'grande';\r\n}\r\n\r\ntype IDomestico = IFelino | ICanino; Poderia usar &\r\n\r\nconst animal: IDomestico =\r\n{\r\n    domestico: true,\r\n    nome: 'cachorro',\r\n    porte: 'medio',\r\n    tipo: 'terrestre',\r\n} */\n\n/*Códigos 3.12.1.4\r\n\r\ninterface IAnimal\r\n{\r\n    nome: string;\r\n    tipo: 'terrestre' | 'aquatico';\r\n    executarRugido(alturaEmDecibeis: number): void;\r\n}\r\n\r\ninterface IFelino extends IAnimal\r\n{\r\n    visaoNoturna: boolean;\r\n}\r\n\r\nconst animal: IAnimal =\r\n{\r\n    nome: 'Elefante',\r\n    tipo: 'terrestre',\r\n    executarRugido: (alturaEmDecibeis) => (`S{alturaEmDecibeis}db`)\r\n}\r\n\r\nanimal.executarRugido('s') Não aceitará por ser uma string no parametro\r\n\r\nconst felino: IFelino =\r\n{\r\n    nome: 'Leão',\r\n    tipo: 'terrestre',\r\n    visaoNoturna: true,\r\n} */\n\n/* Códigos 3.12.1.3\r\n\r\nfunction soma(a: number, b: number) {\r\n\r\n    return a + b;\r\n    \r\n}\r\n\r\nsoma('a','b') Não funcionára pq espero apenas número nesta função! */"},"sourceMaps":{"js":{"mappings":[{"source":"index.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"index.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":2,"column":0}},{"source":"index.ts","name":null,"original":{"line":12,"column":6},"generated":{"line":2,"column":4}},{"source":"index.ts","name":null,"original":{"line":12,"column":16},"generated":{"line":2,"column":14}},{"source":"index.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":2,"column":17}},{"source":"index.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":3,"column":2}},{"source":"index.ts","name":null,"original":{"line":14,"column":9},"generated":{"line":3,"column":7}},{"source":"index.ts","name":null,"original":{"line":14,"column":11},"generated":{"line":3,"column":9}},{"source":"index.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":3,"column":11}},{"source":"index.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":4,"column":2}},{"source":"index.ts","name":null,"original":{"line":15,"column":8},"generated":{"line":4,"column":6}},{"source":"index.ts","name":null,"original":{"line":15,"column":10},"generated":{"line":4,"column":8}},{"source":"index.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":5,"column":0}},{"source":"index.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":5,"column":1}},{"source":"index.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":6,"column":0}},{"source":"index.ts","name":null,"original":{"line":50,"column":0},"generated":{"line":38,"column":0}},{"source":"index.ts","name":null,"original":{"line":79,"column":0},"generated":{"line":67,"column":0}},{"source":"index.ts","name":null,"original":{"line":98,"column":0},"generated":{"line":86,"column":0}},{"source":"index.ts","name":null,"original":{"line":121,"column":0},"generated":{"line":109,"column":0}},{"source":"index.ts","name":null,"original":{"line":130,"column":0},"generated":{"line":118,"column":0}},{"source":"index.ts","name":null,"original":{"line":139,"column":0},"generated":{"line":127,"column":0}},{"source":"index.ts","name":null,"original":{"line":168,"column":0},"generated":{"line":156,"column":0}},{"source":"index.ts","name":null,"original":{"line":198,"column":0},"generated":{"line":186,"column":0}}],"sources":{"index.ts":"//Códigos 3.12.1.12\r\n\r\ninterface Pessoa\r\n{\r\n    nome: string;\r\n    idade: number;\r\n    nacionalidade: string;\r\n}\r\n\r\ninterface Brasileiro extends Omit<Pessoa, 'nacionalidade'>{}\r\n\r\nconst brasileiro: Brasileiro =\r\n{\r\n    idade: 19,\r\n    nome: 'Luiz',\r\n}\r\n\r\n/*Códigos 3.12.1.11\r\n\r\nimport $ from 'jquery';\r\n\r\n$.fn.extend\r\n(\r\n    {\r\n        novaFuncao()\r\n        {\r\n            console.log('Chamou nova funcao');\r\n        }\r\n    }\r\n);\r\n\r\n$('input').novaFuncao();\r\n\r\ninterface Estudante\r\n{\r\n    nome: string;\r\n    idade: number;\r\n}\r\n\r\ninterface Estudante\r\n{\r\n    serie: string;\r\n}\r\n\r\nconst estudante: Estudante =\r\n{\r\n\r\n}*/\r\n\r\n/*Códigos 3.12.1.10\r\n\r\ninterface Cachorro\r\n{\r\n    nome: string;\r\n    idade: number;\r\n    parqueFavorito?: string; \r\n}\r\n\r\ntype CachorroSomenteLeitura =\r\n{\r\n    +readonly [K in keyof Cachorro]-?: Cachorro[K];\r\n}\r\n\r\nclass MeuCachorro implements CachorroSomenteLeitura\r\n{\r\n    nome;\r\n    idade;\r\n    parqueFavorito;\r\n\r\n    constructor(nome, idade)\r\n    {\r\n        this.nome = nome;\r\n        this.idade = idade;\r\n    }\r\n}\r\n\r\nconst cao = new MeuCachorro('Apolo', 14); */\r\n\r\n/*Códigos 3.12.1.9\r\n\r\ninterface IUsuario \r\n{\r\n    id: string;\r\n    email: string;\r\n    cargo?: 'gerente' | 'coordenador' | 'supervisor' | 'funcionario';\r\n}\r\n\r\nfunction redirecione(usuario: IUsuario)\r\n{\r\n    if(usuario.cargo)\r\n    {\r\n        // redirecionar(usuario.cargo);\r\n    }\r\n\r\n    //redirecionar para area do usuário\r\n}*/\r\n\r\n/*Códgigos 3.12.1.8\r\n\r\ninterface IUsuario\r\n{\r\n    id: string;\r\n    email: string;\r\n}\r\n\r\ninterface IAdmin extends IUsuario\r\n{\r\n    cargo: 'gerente' | 'coordenador' | 'supervisor';\r\n}\r\n\r\nfunction redirecione(usuario: IUsuario | IAdmin)\r\n{\r\n    if('cargo' in usuario)\r\n    {\r\n         redirecionar para a área de administração\r\n    }\r\n\r\n     redirecionar para a área do usuário\r\n} */\r\n\r\n/*Códigos 3.12.1.7\r\n\r\nfunction adicionarApendiceALista<T>(array: T[], valor: T)\r\n{\r\n    return array.map(() => valor);\r\n}\r\n\r\nadicionarApendiceALista([1, 2, 3], 1); */\r\n\r\n/*Códigos 3.12.1.6\r\n\r\nconst input = document.getElementById('input') as HTMLInputElement;\r\n\r\ninput.addEventListener('input', (event) => {\r\n    const i = event.currentTarget as HTMLInputElement;\r\n    console.log(i.value);\r\n}); */\r\n\r\n/*Códigos 3.12.1.5\r\n\r\ninterface IAnimal\r\n{\r\n    nome: string;\r\n    tipo: 'terrestre' | 'aquatico';\r\n    domestico: boolean;\r\n}\r\n\r\ninterface IFelino extends IAnimal\r\n{\r\n    visaoNoturna: boolean;\r\n}\r\n\r\ninterface ICanino extends IAnimal\r\n{\r\n    porte: 'pequeno' | 'medio' | 'grande';\r\n}\r\n\r\ntype IDomestico = IFelino | ICanino; Poderia usar &\r\n\r\nconst animal: IDomestico =\r\n{\r\n    domestico: true,\r\n    nome: 'cachorro',\r\n    porte: 'medio',\r\n    tipo: 'terrestre',\r\n} */\r\n\r\n/*Códigos 3.12.1.4\r\n\r\ninterface IAnimal\r\n{\r\n    nome: string;\r\n    tipo: 'terrestre' | 'aquatico';\r\n    executarRugido(alturaEmDecibeis: number): void;\r\n}\r\n\r\ninterface IFelino extends IAnimal\r\n{\r\n    visaoNoturna: boolean;\r\n}\r\n\r\nconst animal: IAnimal =\r\n{\r\n    nome: 'Elefante',\r\n    tipo: 'terrestre',\r\n    executarRugido: (alturaEmDecibeis) => (`S{alturaEmDecibeis}db`)\r\n}\r\n\r\nanimal.executarRugido('s') Não aceitará por ser uma string no parametro\r\n\r\nconst felino: IFelino =\r\n{\r\n    nome: 'Leão',\r\n    tipo: 'terrestre',\r\n    visaoNoturna: true,\r\n} */\r\n\r\n/* Códigos 3.12.1.3\r\n\r\nfunction soma(a: number, b: number) {\r\n\r\n    return a + b;\r\n    \r\n}\r\n\r\nsoma('a','b') Não funcionára pq espero apenas número nesta função! */\r\n"},"lineCount":null}},"error":null,"hash":"a01902b3b4d371fd6c5ea047598b33d5","cacheData":{"env":{}}}